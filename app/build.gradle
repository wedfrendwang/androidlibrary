apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.welive"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //在代码中使用Lambda表达式需要配置
        jackOptions.enabled = true;
    }

    compileOptions{
        sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_8
        targetCompatibility org.gradle.api.JavaVersion.VERSION_1_8
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:design:25.0.1'
    //square公司提供的网络请求和json数据解析库，并且retrofit2内置okhttp，也就是说okhttp的方法一样可以进行使用
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    //RxJava的引用类库，在MyApplication中会进行配置的，这样在Retrofit的请求之后将接口的类型设置为Observable<>类型，很爽
    // 针对rxjava2.x（adapter-rxjava2的版本要 >= 2.2.0）
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    testCompile 'junit:junit:4.12'
}
